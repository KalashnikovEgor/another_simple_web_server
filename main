from http.server import BaseHTTPRequestHandler, HTTPServer
from urllib.parse import urlparse, parse_qs
import requests
import time
import random

hostName = "localhost"
serverPort = 8080

class MyServer(BaseHTTPRequestHandler):

    # def parse_url(self):
    #     request = self.path
    #     print(request)
    #     parsed_url = urlparse(request)
    #     dict = parse_qs(parsed_url.query)
    #     return dict
    # def do_POST(self):
    #     self.send_response(200)
    #     self.send_header("Content-type", "text/html")
    #     self.end_headers()


    def do_POST(self):
        content_len = int(self.headers.get('Content-Length'))
        post_body = self.rfile.read(content_len)
        self.send_response(200)
        self.send_header("Content-type", "text/html")
        self.end_headers()
        # self.wfile.write(bytes("""<b>qqq</b>""", "utf-16"))
        print(str(post_body))
        if post_body == bytes('login=admin&password=123',"utf-8"):
            rand = random.randint(1000, 9999)
            self.wfile.write(bytes(str(rand), "utf-16"))
        else:
            self.wfile.write(bytes("""<b>access is denied</b>""", "utf-16"))




    def do_GET(self):
        self.send_response(200)
        self.send_header("Content-type", "text/html")
        self.end_headers()
        # rand = random.randint(1000, 9999)
        # self.wfile.write(bytes(str(rand), "utf-16"))
        self.wfile.write(bytes("""<form method="post">
  <label for="login">login </label>
  <input type="text" id="login" name="login"><br><br>
  <label for="password">password </label>
  <input type="password" id="password" name="password"><br><br>
  <input type="submit" value="Submit">
</form>""", "utf-16"))
        # request = self.path
        # print(request)
        # parsed_url = urlparse(request)
        # dict = parse_qs(parsed_url.query)
        # if 'login' in dict and 'password' in dict:
        #     print(dict['login'], dict['password'])
        #     if dict['login'] == ['admin'] and dict['password'] == ['123']:
        #         # self.wfile.
        #         rand = random.randint(1000, 9999)
        #         self.wfile.write(bytes(str(rand), "utf-16"))





if __name__ == "__main__":
    webServer = HTTPServer((hostName, serverPort), MyServer)
    print("Server started http://%s:%s" % (hostName, serverPort))

    try:
        webServer.serve_forever()
    except KeyboardInterrupt:
        pass

    webServer.server_close()
    print("Server stopped.")
